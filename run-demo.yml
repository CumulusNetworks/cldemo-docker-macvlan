---
- hosts: network
  become: yes
  tasks:
    - name: copy interfaces
      copy: src=config/{{ansible_hostname}}/interfaces dest=/etc/network/
    #- name: copy Quagga daemons
    #  copy: src=config/{{ansible_hostname}}/daemons dest=/etc/quagga/
    - name: copy Quagga conf
      copy: src=config/{{ansible_hostname}}/Quagga.conf dest=/etc/quagga/
    - name: reload networking
      command: ifreload -a
    - name: reload quagga
      service: name=quagga state=restarted

- hosts: leaf
  become: yes
  tasks:
    - name: start redistribute neighbor
      command: systemctl enable rdnbrd.service
    - name: restart redistribute neighbor
      command: systemctl restart rdnbrd.service

- hosts: servers
  become: yes
  vars:
      container_ip:
          server01: "127.16.1"
          server02: "127.16.2"
          server03: "127.16.3"
          server04: "127.16.4"
  tasks:
    - name: copy interfaces
      copy: src=config/{{ansible_hostname}}/interfaces dest=/etc/network/
    - name: copy dockerfile
      copy: src=config/{{ansible_hostname}}/interfaces dest=/home/cumulus/
    - name: restarts servers with their new configuration
      shell: sleep 1 && shutdown -r 0
      async: 1
      poll: 0
      ignore_errors: true
    - name: Wait for everything to come back up
      local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=OpenSSH delay=10
    - name: create macvlan network
      command: docker network create -d macvlan --subnet={{container_ip[inventory_hostname]}}.0/26 --ip-range={{container_ip[inventory_hostname]}}.0/26 --gateway={{container_ip[inventory_hostname]}}.1 --aux-address="exclude_host={{container_ip[inventory_hostname]}}.254" -o parent=eth1 macnetworketh1
    - name: build container
      command: docker build -t test_container /home/cumulus/
    - name: run container 1
      command: docker run --net=macnetworketh1 -itd test_container
    - name: run container 2
      command: docker run --net=macnetworketh1 -itd test_container
    - name: run container 3
      command: docker run --net=macnetworketh1 -itd test_container
